{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","messageStyle","imgBlock","gomer","src","avatar","alt","window","name","message","time","messageData","HW1","Affair","priorityClass","affair","priority","onClick","deleteAffairCallback","id","button","Affairs","mappedAffairs","data","map","m","all","filter","active","nigh","middle","low","setFilter","defaultAffairs","v1","HW2","useState","affairs","setAffairs","filteredAffairs","f","filterAffairs","Tid","t","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","trimedName","currentTarget","trim","alert","HW3","setUsers","_id","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","initialButton","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","Junior","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","JuniorPlus","PATH","RoutesApp","path","element","to","Header","isActive","activeLink","link","HW5","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c7b9d6ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__KUwpb\",\"active\":\"Affairs_active__wHEVm\",\"name\":\"Affairs_name__2Tfwt\",\"affair\":\"Affairs_affair__1uSo8\",\"NIGH\":\"Affairs_NIGH__cBYAC\",\"MIDDLE\":\"Affairs_MIDDLE__2lBC6\",\"LOW\":\"Affairs_LOW__2DBFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3fmL9\",\"activeLink\":\"Header_activeLink__15Hwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageStyle\":\"Message_messageStyle__2rvY-\",\"imgBlock\":\"Message_imgBlock__WN52e\",\"gomer\":\"Message_gomer__EjdCg\",\"window\":\"Message_window__2ZuZc\",\"message\":\"Message_message__28mTK\",\"name\":\"Message_name__1lsB-\",\"time\":\"Message_time__cOpw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2YDaQ\",\"errorInput\":\"SuperInputText_errorInput__DJYq9\",\"error\":\"SuperInputText_error__ogfld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Y4uV\",\"red\":\"SuperButton_red__1kyJb\",\"initialButton\":\"SuperButton_initialButton__1aqAK\",\"bounce\":\"SuperButton_bounce__fi0rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__YriUC\",\"error\":\"Greeting_error__2Beat\",\"button\":\"Greeting_button__173pp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__25aXq\",\"column\":\"HW4_column__4VgOQ\",\"testSpanError\":\"HW4_testSpanError__3cKXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2I5Sj\",\"spanClassName\":\"SuperCheckbox_spanClassName__1-uek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__353RT\"};","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nexport function Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n            <div className={style.imgBlock}>\r\n                <img className={style.gomer} src={props.avatar} alt={'avatar'}/>\r\n\r\n                <div className={style.window}>\r\n                    <div className={style.name}> {props.name}</div>\r\n                    <div className={style.message}> {props.message}</div>\r\n                    <div className={style.time}> {props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport App from \"../../p1-main/m1-ui/u1-app/App\";\r\nimport {Message} from \"./Message\";\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://stickers.wiki/static/stickers/homero_maximus10m/file_64991.webp',\r\n    name: 'GOMER',\r\n    message: 'npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\n\r\n function HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\nexport default HW1\r\n\r\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport style from './Affairs.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (id: string) => void\n}\n\nexport function Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair.id) }\n    const priorityClass = style[props.affair.priority] //подсмотрел у Игната, как сделать не понял\n\n    return (\n        <div className={style.affair}>\n            <div className={style.name}> {props.affair.name}</div>\n            <div className={priorityClass}>  [{props.affair.priority}]</div>\n            <button onClick={deleteCallback}\n                    className={style.button}>X</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Affair} from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport style from './Affairs.module.css'\n\ntype AffairsPropsType = {\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (Tid: string) => void\n    filter: FilterType\n}\n\nexport function Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((m: AffairType) => (\n        <Affair\n            key={m.id}\n            affair={m}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => { props.setFilter('ALL') }\n    const setHigh = () => { props.setFilter('NIGH') }\n    const setMiddle = () => { props.setFilter('MIDDLE') }\n    const setLow = () => { props.setFilter('LOW') }\n\n    const all = (props.filter==='ALL' ? style.active : style.button)\n    const nigh = (props.filter==='NIGH' ? style.active : style.button)\n    const middle = (props.filter==='MIDDLE' ? style.active : style.button)\n    const low = (props.filter==='LOW' ? style.active : style.button)\n\n    return (\n        <div>\n            {mappedAffairs}\n            <button className={all} onClick={setAll} >All</button>\n            <button className={nigh} onClick={setHigh} >High</button>\n            <button className={middle} onClick={setMiddle}>Middle</button>\n            <button className={low} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {Affairs} from './Affairs'\nimport {v1} from \"uuid\";\n\nexport type AffairPriorityType = 'NIGH' | 'LOW' | 'MIDDLE' //типизация для типов фильтра\nexport type AffairType = {\n    id: string\n    name: string\n    priority: AffairPriorityType    //типизация для priority\n}\nexport type FilterType = 'ALL' | AffairPriorityType\nconst defaultAffairs: AffairType[] = [              //типизация для defaultAffairs\n    {id: v1(), name: 'React ', priority: 'NIGH'},\n    {id: v1(), name: 'anime ', priority: 'LOW'},\n    {id: v1(), name: 'games ', priority: 'LOW'},\n    {id: v1(), name: 'work ', priority: 'NIGH'},\n    {id: v1(), name: 'html & css ', priority: 'MIDDLE'},\n]\n\nexport function filterAffairs(affairs: AffairType[], filter: FilterType) {\n    return filter ==='ALL' ? affairs : affairs.filter(f => f.priority === filter)\n}\n\nfunction deleteAffair(affairs: AffairType[], Tid: string) {\n    return affairs.filter(t => t.id !== Tid)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('ALL')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (Tid: string) => setAffairs(deleteAffair(affairs, Tid));\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\r\nimport style from './Greeting.module.css'\r\n\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: any // need to fix any\r\n    addUser: ()=>void // need to fix any\r\n    error: any // need to fix any\r\n    totalUsers: any // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = style.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback}\r\n                   className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button className={style.button} onClick={addUser}>ADD</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimedName = e.currentTarget.value.trim()\r\n        if (trimedName) {\r\n            setName(trimedName)\r\n            setError('')\r\n        } else{\r\n            setName('')\r\n            setError('Введите имя')\r\n        }\r\n        // need to fix\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello ${name} !`) // need to fix\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\nexport type UserType = {\r\n    _id: string // тип прописать\r\n    name: string // тип прописать\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // тип прописать\r\n\r\n    const addUserCallback = (name: string) => { // тип прописать\r\n        setUsers([...users, {_id: v1(), name: name,}]) // тип прописать\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <GreetingContainer users={users}\r\n                               addUserCallback={addUserCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.initialButton} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : '-ERROR-'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('Enter text...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        // setValue()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport {Error404} from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior_plus',\r\n}\r\n\r\nexport function RoutesApp() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path='/' element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                <Route path='/*' element={<Error404/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from \"./Routes\";\r\nimport style from './Header.module.css'\r\n\r\nconst activeLink = (isActive: boolean) => isActive ? style.activeLink : style.link\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n            <NavLink to={PATH.PRE_JUNIOR}\r\n                     className={({isActive}) => isActive ? style.activeLink : style.link}>Pre_Junior </NavLink>\r\n            <NavLink to={PATH.JUNIOR}\r\n                     className={({isActive}) => isActive ? style.activeLink : style.link}> Junior </NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS}\r\n                     className={({isActive}) => isActive ? style.activeLink : style.link}> Junior Plus </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {Header} from './Header'\r\nimport {RoutesApp} from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n                <Header/>\r\n                <RoutesApp/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n           <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}